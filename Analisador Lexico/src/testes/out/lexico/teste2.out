const palavra_reservada 1:1
{ delimitador 1:7
int palavra_reservada 2:1
a id 2:5
= operador 2:7
2 numero 2:8
; delimitador 2:9
char palavra_reservada 3:1
b id 3:6
= operador 3:8
'a' caractere_constante 3:9
; delimitador 3:12
char palavra_reservada 4:1
a id 4:6
= operador 4:7
5 numero 4:8
; delimitador 4:9
} delimitador 5:1
const palavra_reservada 6:1
{ delimitador 6:6
int palavra_reservada 7:1
a id 7:5
= operador 7:6
2 numero 7:7
; delimitador 7:8
} delimitador 8:1
int palavra_reservada 10:1
b id 10:5
; delimitador 10:6
int palavra_reservada 11:1
c id 11:5
; delimitador 11:6
char palavra_reservada 12:1
d id 12:6
; delimitador 12:7
float palavra_reservada 13:1
e id 13:7
; delimitador 13:8
string palavra_reservada 14:1
a1 id 14:8
; delimitador 14:10
class palavra_reservada 15:1
abb id 15:7
> operador 15:11
a1 id 15:13
{ delimitador 15:15
} delimitador 17:1
class palavra_reservada 18:1
dad id 18:7
{ delimitador 18:10
} delimitador 20:1
class palavra_reservada 22:1
son id 22:7
> operador 22:11
dad id 22:13
{ delimitador 22:16
} delimitador 24:1
class palavra_reservada 25:1
aaa id 25:7
> operador 25:11
aaa id 25:13
{ delimitador 25:16
} delimitador 27:1
class palavra_reservada 28:1
aaaa id 28:7
> operador 28:12
aba id 28:14
{ delimitador 28:17
} delimitador 30:1
class palavra_reservada 31:1
a id 31:7
{ delimitador 31:8
} delimitador 33:1
class palavra_reservada 34:1
aaa id 34:7
{ delimitador 34:11
const palavra_reservada 35:1
{ delimitador 35:7
int palavra_reservada 36:1
a id 36:5
= operador 36:6
10.10 numero 36:7
; delimitador 36:12
} delimitador 37:1
int palavra_reservada 38:1
a id 38:5
; delimitador 38:6
int palavra_reservada 39:1
b id 39:5
; delimitador 39:6
} delimitador 41:1
void palavra_reservada 45:1
main palavra_reservada 45:6
( delimitador 45:10
) delimitador 45:11
{ delimitador 45:13
int palavra_reservada 46:1
a id 46:5
; delimitador 46:6
if palavra_reservada 48:1
( delimitador 48:3
a id 48:4
== operador 48:5
2 numero 48:7
+ operador 48:8
2 numero 48:9
+ operador 48:10
2 numero 48:11
* operador 48:12
2 numero 48:13
&& operador 48:14
true palavra_reservada 48:16
) delimitador 48:20
{ delimitador 48:21
a id 49:1
= operador 49:3
10 numero 49:4
; delimitador 49:6
} delimitador 50:1
else palavra_reservada 50:3
{ delimitador 50:8
a id 51:1
= operador 51:2
2 numero 51:3
; delimitador 51:4
} delimitador 52:1
} delimitador 53:1
class palavra_reservada 56:1
capim id 56:7
> operador 56:13
folha id 56:15
{ delimitador 56:21
float palavra_reservada 58:5
isGreen id 58:11
( delimitador 58:18
) delimitador 58:19
{ delimitador 58:21
return palavra_reservada 59:9
b id 59:16
; delimitador 59:17
} delimitador 60:5
} delimitador 62:1

nao ha erros lexicos
