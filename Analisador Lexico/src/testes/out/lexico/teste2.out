const palavra_reservada 1:1
{ delimitador 1:7
int palavra_reservada 2:1
a id 2:5
= operador 2:7
2 numero 2:8
; delimitador 2:9
char palavra_reservada 3:1
b id 3:6
= operador 3:8
'a' caractere_constante 3:9
; delimitador 3:12
char palavra_reservada 4:1
a id 4:6
= operador 4:7
5 numero 4:8
; delimitador 4:9
int palavra_reservada 5:1
abcd id 5:5
= operador 5:9
0 numero 5:10
; delimitador 5:11
} delimitador 6:1
const palavra_reservada 7:1
{ delimitador 7:6
int palavra_reservada 8:1
a id 8:5
= operador 8:6
2 numero 8:7
; delimitador 8:8
} delimitador 9:1
int palavra_reservada 11:1
b id 11:5
; delimitador 11:6
int palavra_reservada 12:1
c id 12:5
; delimitador 12:6
char palavra_reservada 13:1
d id 13:6
; delimitador 13:7
float palavra_reservada 14:1
e id 14:7
; delimitador 14:8
string palavra_reservada 15:1
a1 id 15:8
; delimitador 15:10
class palavra_reservada 16:1
abb id 16:7
> operador 16:11
a1 id 16:13
{ delimitador 16:15
} delimitador 18:1
class palavra_reservada 19:1
dad id 19:7
{ delimitador 19:10
float palavra_reservada 20:1
ddd id 20:7
; delimitador 20:10
int palavra_reservada 21:1
vet2 id 21:5
[ delimitador 21:9
10.0 numero 21:10
] delimitador 21:14
; delimitador 21:15
int palavra_reservada 22:1
vet id 22:5
[ delimitador 22:8
ddd id 22:9
] delimitador 22:12
; delimitador 22:13
int palavra_reservada 23:1
vetor id 23:5
[ delimitador 23:11
nao id 23:12
] delimitador 23:15
; delimitador 23:16
const palavra_reservada 24:1
{ delimitador 24:7
int palavra_reservada 25:1
a id 25:5
= operador 25:7
2 numero 25:8
; delimitador 25:9
char palavra_reservada 26:1
b id 26:6
= operador 26:8
'a' caractere_constante 26:9
; delimitador 26:12
char palavra_reservada 27:1
a id 27:6
= operador 27:7
5 numero 27:8
; delimitador 27:9
} delimitador 28:1
int palavra_reservada 30:2
abcd id 30:6
; delimitador 30:10
} delimitador 31:1
class palavra_reservada 33:1
son id 33:7
> operador 33:11
dad id 33:13
{ delimitador 33:16
} delimitador 35:1
class palavra_reservada 36:1
aaa id 36:7
> operador 36:11
aaa id 36:13
{ delimitador 36:16
} delimitador 38:1
class palavra_reservada 39:1
aaaa id 39:7
> operador 39:12
aba id 39:14
{ delimitador 39:17
} delimitador 41:1
class palavra_reservada 42:1
a id 42:7
{ delimitador 42:8
} delimitador 44:1
class palavra_reservada 45:1
aaa id 45:7
{ delimitador 45:11
const palavra_reservada 46:1
{ delimitador 46:7
int palavra_reservada 47:1
a id 47:5
= operador 47:6
10.10 numero 47:7
; delimitador 47:12
} delimitador 48:1
int palavra_reservada 49:1
a id 49:5
; delimitador 49:6
int palavra_reservada 50:1
b id 50:5
; delimitador 50:6
} delimitador 52:1
void palavra_reservada 56:1
main palavra_reservada 56:6
( delimitador 56:10
) delimitador 56:11
{ delimitador 56:13
int palavra_reservada 57:1
a id 57:5
; delimitador 57:6
float palavra_reservada 58:1
a id 58:7
; delimitador 58:8
if palavra_reservada 59:1
( delimitador 59:3
a id 59:4
== operador 59:5
2 numero 59:7
+ operador 59:8
2 numero 59:9
+ operador 59:10
2 numero 59:11
* operador 59:12
2 numero 59:13
&& operador 59:14
true palavra_reservada 59:16
) delimitador 59:20
{ delimitador 59:21
a id 60:1
= operador 60:3
10 numero 60:4
; delimitador 60:6
} delimitador 61:1
else palavra_reservada 61:3
{ delimitador 61:8
a id 62:1
= operador 62:2
2 numero 62:3
; delimitador 62:4
} delimitador 63:1
} delimitador 64:1
class palavra_reservada 66:1
folha id 66:7
{ delimitador 66:12
float palavra_reservada 67:2
isGreen id 67:8
( delimitador 67:15
int palavra_reservada 67:16
a id 67:20
, delimitador 67:21
int palavra_reservada 67:23
bbbb id 67:27
) delimitador 67:31
{ delimitador 67:33
return palavra_reservada 68:9
bbb2 id 68:16
; delimitador 68:20
} delimitador 69:5
int palavra_reservada 70:5
batata id 70:9
( delimitador 70:15
int palavra_reservada 70:16
maca id 70:20
, delimitador 70:24
int palavra_reservada 70:26
uva id 70:30
) delimitador 70:33
{ delimitador 70:34
return palavra_reservada 71:9
maca id 71:16
; delimitador 71:20
} delimitador 72:5
float palavra_reservada 73:5
isFruta id 73:11
( delimitador 73:18
int palavra_reservada 73:19
banana id 73:23
, delimitador 73:29
int palavra_reservada 73:31
beteraba id 73:35
) delimitador 73:43
{ delimitador 73:45
return palavra_reservada 74:9
banana id 74:16
; delimitador 74:22
} delimitador 75:5
} delimitador 76:1
class palavra_reservada 77:1
capim id 77:7
> operador 77:13
folha id 77:15
{ delimitador 77:21
float palavra_reservada 78:5
isGreen id 78:11
( delimitador 78:18
int palavra_reservada 78:19
a222 id 78:23
, delimitador 78:27
int palavra_reservada 78:29
b12222 id 78:33
) delimitador 78:39
{ delimitador 78:41
int palavra_reservada 79:9
abcd id 79:13
; delimitador 79:17
return palavra_reservada 80:9
b id 80:16
; delimitador 80:17
} delimitador 81:5
int palavra_reservada 83:5
batata id 83:9
( delimitador 83:15
int palavra_reservada 83:16
maca id 83:20
, delimitador 83:24
float palavra_reservada 83:26
uva id 83:32
) delimitador 83:35
{ delimitador 83:36
return palavra_reservada 84:9
maca id 84:16
; delimitador 84:20
} delimitador 85:5
int palavra_reservada 87:5
isFruta id 87:9
( delimitador 87:16
int palavra_reservada 87:17
banana id 87:21
, delimitador 87:27
int palavra_reservada 87:29
beteraba id 87:33
) delimitador 87:41
{ delimitador 87:43
int palavra_reservada 88:9
banana id 88:13
; delimitador 88:19
return palavra_reservada 89:9
banana id 89:16
; delimitador 89:22
} delimitador 90:5
} delimitador 92:1

nao ha erros lexicos
